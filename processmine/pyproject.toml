# pyproject.toml
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "processmine"
version = "0.1.0"
description = "Memory-efficient process mining with GNN, LSTM, and RL"
authors = [{name = "ERP.AI", email = "info@erp.ai"}]
readme = "README.md"
license = {text = "Apache License 2.0"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Scheduling",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.8.0",
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "tqdm>=4.60.0",
    "colorama>=0.4.4",
    "psutil>=5.8.0",
]

[project.optional-dependencies]
gnn = [
    "torch-geometric>=2.0.0",
    "networkx>=2.6.0",
]
viz = [
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
]
ml = [
    "xgboost>=1.5.0",
]
all = [
    "torch-geometric>=2.0.0",
    "networkx>=2.6.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "xgboost>=1.5.0",
    "pm4py>=2.2.0",
]
dev = [
    "pytest>=6.0.0",
    "flake8>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.910",
]

[project.scripts]
processmine = "processmine.cli:main"

[tool.setuptools]
packages = ["processmine"]

[tool.setuptools.package-data]
processmine = ["py.typed"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"